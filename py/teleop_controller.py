from record_controller import RecordController, PlaybackController
import sys
from collections import OrderedDict
class TeleopController:

    def __init__(self, driver_stick, drive_controller, talon_arr):
        self.driver_stick = driver_stick
        self.drive_controller = drive_controller
        self.talon_arr = talon_arr
        self.instructions = OrderedDict([("1, <class 'grt.sensors.talon.Talon'>", [0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137]), ("2, <class 'grt.sensors.talon.Talon'>", [0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, -0.8, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, 0.2571428571428571, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -0.6285714285714286, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, -1.1714285714285715, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 0.1428571428571429, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 1.2571428571428571, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137, 0.17142857142857137])])
        self.record_controller = RecordController([self.drive_controller.dt.left_motor, self.drive_controller.dt.right_motor], 10)
        self.playback_controller = PlaybackController(self.instructions, self.talon_arr)
        self.playback = False
        self.recording = False

    def poll(self):
        #self.sp.poll()
        #self.hid_sp.poll()
        if self.driver_stick.j.GetRawButton(10):
                #raise NameError('Rebooting')
                self.recording = True
                #self.playback = True
      
        if self.playback:
            self.playback_controller.playback()
        elif self.recording:
            self.drive_controller.update()
            self.record_controller.record()
            #self.drive_controller.update_and_record()
        else:
            #self.mech_controller.update()
            self.drive_controller.update()

        if self.record_controller.finished:
            self.recording = False
            self.record_controller.finished = False
            print(self.record_controller.instructions)
            sys.exit(0)